
NOTE: As might be expected, Ansible collections are installed as Python modules as you can see by the
path below ( within the VE Python: ....site-packages/ansible_collections)

This was run from the project base dir, but anywhere inside the project should work the same because
 the VE is active everywhere inside the project (ve.ansimy) thanks to Pyenv:
> ansible-galaxy collection install paloaltonetworks.panos


**** IMPORTANT. Pay attention to what lives under ~/.ansible/
Everything here will be shared accross the USER, no matter what Python V.E. is used. FOR THIS REASON, a containerized
deployment becomes more attractive. When doing local development, running Ansible in local Python Virtual Environments,
always remember you may be using and referencing resources under ~/.ansible/
For consistency and if this would not happen too frequently; one might want to delete ~/.ansible/ when switching
between Ansible projects where you are changing and/or validating the installation of dependencies, etc.
(if you are working on multiple Ansible projects and using multiple VEs. If you delete ~/.ansible/ then you will
also want to delete and recreate your VE, so everything is done cleanly and with a low risk of any conflicts.
If you are doing this a lot, there is another reason to use a container.

ABOUT CONTAINERIZATION AND DUAL MODE PROJECTS: (This is a bit of a stream of consciousness. These are notes.)
On my GitHub, I have now or will soon have CONTAINERIZED variants of my Ansible projects or I might completely
containerize these projects, because it is easy to use a containerized project in the standalone mode if it has
been set up that way. Most or all web app stacks are like this, and Ansible projects should be too; such that
one can run in a local dev mode in a VM and instantly switch to a docker compose stack or single container and
even push that to run/test elsewhere all by running a few different scripts and commands.
It is clear to me that Ansible projects are perfect for this just like web apps are .. trivial switching between
running in a local VM, running locally in compose or pushing to repo to deploy elsehere; with all these options as
simple and fast as typing a different command. (minus a minute or three for docker build and maybe push etc.)
Decision made: All Ansible projects will be containerized by default, but with local operation in a Virtual
Environment as simple to use as in a pure standalone project. Really there will be no difference; it will be the
best of both worlds of local VE mode and docker/compose mode (local or remote). Seamless, possibly with help from
a few shell commands similar to automation I use in web app stacks.


** UPDATE/CLARIFICATION: It is possible that ansible-core installs all of its standard/default collections within
 the V.E. and that ansible-galaxy installs its collections in the user home directory under ~/.ansible/
 That's what it looks like actually. Similar concerns as detailed above still apply.
 IMO Ansible should not do anything in ~ but there might be a config value to move the usage of such a location to
 a directory within the project. Just theorizing. All this leads to reasons to containerize where it does not matter
 what happens under ~/.ansible/ v.s. relative to the executing context (local ansible directory or the CWD.)

***** I see a lot of Cisco stuff in the core but not PA networks. So Ansible core supports Cisco to some degree or
to a large degree, to be determined. Palo Alto Networks obviouly requires an installation for support.

* But pip freeze will not show the individual Ansible collections. See the list below via "ansible-galaxy ..."
------------------------------------------------------------------------
(ve.ansimy) ➜  AnsibleMyEC2 git:(main) ✗ pip freeze
ansible==7.3.0
ansible-core==2.14.3
boto3==1.26.93
botocore==1.29.93
cffi==1.15.1
cryptography==39.0.2
Jinja2==3.1.2
jmespath==1.0.1
MarkupSafe==2.1.2
packaging==23.0
pycparser==2.21
python-dateutil==2.8.2
PyYAML==6.0
resolvelib==0.8.1
s3transfer==0.6.0
six==1.16.0
urllib3==1.26.15
--------------------------------------------------------------------------

(ve.ansimy) ➜  AnsibleMyEC2 git:(main) ✗ ansible-galaxy collection list

# /Users/bilbo/.ansible/collections/ansible_collections
Collection             Version
---------------------- -------
paloaltonetworks.panos 2.13.3

# /Users/bilbo/.pyenv/versions/3.11.2/envs/ve.ansimy/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------
amazon.aws                    5.2.0
ansible.netcommon             4.1.0
ansible.posix                 1.5.1
ansible.utils                 2.9.0
ansible.windows               1.13.0
arista.eos                    6.0.0
awx.awx                       21.12.0
azure.azcollection            1.14.0
check_point.mgmt              4.0.0
chocolatey.chocolatey         1.4.0
cisco.aci                     2.4.0
cisco.asa                     4.0.0
cisco.dnac                    6.6.3
cisco.intersight              1.0.23
cisco.ios                     4.3.1
cisco.iosxr                   4.1.0
cisco.ise                     2.5.12
cisco.meraki                  2.15.1
cisco.mso                     2.2.1
cisco.nso                     1.0.3
cisco.nxos                    4.1.0
cisco.ucs                     1.8.0
cloud.common                  2.1.2
cloudscale_ch.cloud           2.2.4
community.aws                 5.2.0
community.azure               2.0.0
community.ciscosmb            1.0.5
community.crypto              2.11.0
community.digitalocean        1.23.0
community.dns                 2.5.1
community.docker              3.4.2
community.fortios             1.0.0
community.general             6.4.0
community.google              1.0.0
community.grafana             1.5.4
community.hashi_vault         4.1.0
community.hrobot              1.7.0
community.libvirt             1.2.0
community.mongodb             1.5.1
community.mysql               3.6.0
community.network             5.0.0
community.okd                 2.3.0
community.postgresql          2.3.2
community.proxysql            1.5.1
community.rabbitmq            1.2.3
community.routeros            2.7.0
community.sap                 1.0.0
community.sap_libs            1.4.0
community.skydive             1.0.0
community.sops                1.6.1
community.vmware              3.4.0
community.windows             1.12.0
community.zabbix              1.9.2
containers.podman             1.10.1
cyberark.conjur               1.2.0
cyberark.pas                  1.0.17
dellemc.enterprise_sonic      2.0.0
dellemc.openmanage            6.3.0
dellemc.os10                  1.1.1
dellemc.os6                   1.0.7
dellemc.os9                   1.0.4
dellemc.powerflex             1.5.0
dellemc.unity                 1.5.0
f5networks.f5_modules         1.22.1
fortinet.fortimanager         2.1.7
fortinet.fortios              2.2.2
frr.frr                       2.0.0
gluster.gluster               1.0.2
google.cloud                  1.1.2
grafana.grafana               1.1.1
hetzner.hcloud                1.10.0
hpe.nimble                    1.1.4
ibm.qradar                    2.1.0
ibm.spectrum_virtualize       1.11.0
infinidat.infinibox           1.3.12
infoblox.nios_modules         1.4.1
inspur.ispim                  1.3.0
inspur.sm                     2.3.0
junipernetworks.junos         4.1.0
kubernetes.core               2.4.0
lowlydba.sqlserver            1.3.1
mellanox.onyx                 1.0.0
netapp.aws                    21.7.0
netapp.azure                  21.10.0
netapp.cloudmanager           21.22.0
netapp.elementsw              21.7.0
netapp.ontap                  22.3.0
netapp.storagegrid            21.11.1
netapp.um_info                21.8.0
netapp_eseries.santricity     1.4.0
netbox.netbox                 3.11.0
ngine_io.cloudstack           2.3.0
ngine_io.exoscale             1.0.0
ngine_io.vultr                1.1.3
openstack.cloud               1.10.0
openvswitch.openvswitch       2.1.0
ovirt.ovirt                   2.4.1
purestorage.flasharray        1.17.0
purestorage.flashblade        1.10.0
purestorage.fusion            1.3.0
sensu.sensu_go                1.13.2
splunk.es                     2.1.0
t_systems_mms.icinga_director 1.32.0
theforeman.foreman            3.9.0
vmware.vmware_rest            2.2.0
vultr.cloud                   1.7.0
vyos.vyos                     4.0.0
wti.remote                    1.0.4

----------------------------

